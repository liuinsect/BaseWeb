<?xml version="1.0" encoding="GBK"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/tx
                     http://www.springframework.org/schema/tx/spring-tx.xsd
                     http://www.springframework.org/schema/aop
                     http://www.springframework.org/schema/aop/spring-aop.xsd 
						http://www.springframework.org/schema/context 
                     http://www.springframework.org/schema/context/spring-context.xsd"
	default-autowire="byName">

	
	<bean id="targetDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${jdbc.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value type="java.lang.Integer">${initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value type="java.lang.Integer">${minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value type="java.lang.Integer">${maxPoolSize}</value>
		</property>
		<!-- 连接池耗尽时一次获取的连接数 -->
		<property name="acquireIncrement">
			<value>${acquireIncrement}</value>
		</property>
		<!-- 获取新连接失败后重试次数 -->
		<property name="acquireRetryAttempts">
			<value>${acquireRetryAttempts}</value>
		</property>
		<!-- 最大空闲时间 -->
		<property name="maxIdleTime">
			<value>${maxIdleTime}</value>
		</property>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource" ref="targetDataSource" />
	</bean>

	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--<bean id="springTransactionTemplate" class="com.jd.gemini.service.transaction.SpringTransactionTemplate"/>-->

	<!-- 使用annotation定义数据库事务，这样可以在类或方法中直接使用@Transactional注解来声明事务 -->
<!--	<tx:annotation-driven transaction-manager="transactionManager" />-->





</beans>